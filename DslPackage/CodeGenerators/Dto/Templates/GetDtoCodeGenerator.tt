<#@ template language="C#" inherits="Columbia.DslPackage.CodeGenerators.Base.CodeGeneratorBase" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    var module = !string.IsNullOrEmpty(Entity.Module) ? Entity.Module : Entity.Name;
#>
using System;

namespace <#= DomainModel.Dto #>.<#= module #>
{
<#
if (Entity != null)
{
	PushIndent(DefautIndent);
#>
public class Get<#= Entity.Name #>Dto : <#= Entity.Name #>Dto
{
<#
	PushIndent(DefautIndent);

	foreach (var primitiveProperty in Entity.PrimitiveProperties.Where(x => x.IsPrimaryKey))
	{
#>
public <#= primitiveProperty.Type #> <#= primitiveProperty.Name #> { get; set; }<#= primitiveProperty.Type == "string" ? " = null!;" : string.Empty #>
<#
	}

	if(Entity.IsAuditable)
	{
#>
public bool IsActive { get; set; }
<#
	}

	PopIndent();
#>
}
<#
}

ClearIndent();
#>
}
